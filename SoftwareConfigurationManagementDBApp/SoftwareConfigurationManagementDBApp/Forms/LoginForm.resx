<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vQAAAABJRU5ErkJggg==
</value>
  </data>
</root>